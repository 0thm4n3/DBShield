##############################
### General               ###
#############################

#Operation mode
#possible values:
#       learning (add queries to training set)
#       protect (take action against abnormal queries)
mode: learning


#############################
### Service               ###
#############################

#Thread pool size
threads: 5
#Directory to save internal database
dbDir: "/tmp/model/"
#DBMS type
dbms: postgres
#IP address to listen on
listenIP: 0.0.0.0
#Port number to listen on (0 means dbms default port ex. 3306 for mysql)
listenPort: 5000
#IP address of the server
targetIP: 127.0.0.1
#Port number of the dbms (0 means dbms default port ex. 3306 for mysql)
targetPort: 0
#TLS
tlsPrivateKey:  cert/server-key.pem
tlsCertificate: cert/server-cert.pem


#############################
### Protect               ###
#############################

#Action to take against abnormal requests
#possible values:
#       drop  (close the connection)
#       pass  (pass the query to server)
action: drop


#Properties to check for abnormality
#
#possible values: (you can choose more than one - comma separated)
#       user     (username)
#       source   (request sourece address)
#
# Note: leave empty to avoid adiditional checks
additionalChecks:  user,source


#############################
### Logging               ###
#############################

#Log depth
#possible values:
#       0   (warning)
#       1   (warning + info)
#       2   (warning + info + Debug)
logLevel: 2

#Log path
#possible values:
#       /path/to/file
#       stdout
#       stderr
logPath: stdout


#############################
### Masking               ###
#############################
#mask list
masks:
- database: test    #database name
  table: Persons    #table name
  column: City      #column name
  matchRegEx: .
  replaceRegEx: X
  paddingCharacter: p
- database: test
  table: Persons
  column: Name
  matchRegEx: (.{2}).+
  replaceRegEx: $1
  paddingCharacter: X
